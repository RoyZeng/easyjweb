<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
  	<!--使用MySQL的配置，默认情况下EasyJWeb使用内置的数据库作测试，在实际环境中可以去掉本注解，使用MySQL或其它数据库
  	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName"
			value="org.gjt.mm.mysql.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/easyjweb" />
		<property name="username" value="root" />
		<property name="password" value="admin" />
	</bean> 

	<bean name="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceXmlLocation"
			value="classpath:persistence.xml" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean
				class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="database" value="MYSQL" />
				<property name="showSql" value="false" />
				<property name="generateDdl" value="false" />
			</bean>

		</property>
		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.SimpleLoadTimeWeaver" />
		</property>
	</bean>
-->
<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="org.apache.derby.jdbc.ClientDriver" />
		<property name="url"
			value="jdbc:derby://localhost:1527/easyjweb" />
		<property name="username" value="easyjf" />
		<property name="password" value="easyjf" />
	</bean>
	<bean name="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceXmlLocation"
			value="classpath:persistence.xml" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean
				class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="databasePlatform"
					value="org.hibernate.dialect.DerbyDialect" />
				<property name="showSql" value="false" />
				<property name="generateDdl" value="false" />
			</bean>

		</property>
		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.SimpleLoadTimeWeaver" />
		</property>
	</bean>
	<bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory"
			ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean abstract="true" id="baseDAO"
		class="com.easyjf.core.dao.impl.GenericDAOImpl">
		<property name="entityManagerFactory"
			ref="entityManagerFactory" />
	</bean>
	<bean id="abstractDao" abstract="true"
		class="org.springframework.aop.framework.ProxyFactoryBean">		
	</bean>
	
	<bean id="queryService"
		class="com.easyjf.core.service.impl.QueryServiceImpl">
		<property name="dao">
			<bean parent="baseDAO">
				<constructor-arg>
					<value>java.lang.Object</value>
				</constructor-arg>
			</bean>
		</property>
	</bean>
	<bean id="jpaPoLoader" class="com.easyjf.core.dao.impl.JpaPOLoaderImpl">
	<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
</beans>